import React, {useState} from 'react';

//import all the components we are going to use
import {
  Switch,
  Picker,
  View,
  StyleSheet,
  Text,
  SafeAreaView,
  ScrollView,
  Button,
  ActivityIndicator,
} from 'react-native';
const App = () => {
  const [loading, setLoading] = useState(false);
  const startLoading = () => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
    }, 3000);
  };
  const [switchValue, setSwitchValue] = useState(false);

  const toggleSwitch = (value) => {
    //onValueChange of the switch this function will be called
    setSwitchValue(value);
    //state changes according to switch
    //which will result in re-render the text
  };
  const onPressLearnMore = () => {
    //For generating alert on buttton click
    alert('Hello');
  };
  const [choosenLabel, setChoosenLabel] = useState('Native');
  const [choosenIndex, setChoosenIndex] = useState('2');

  return (
    <SafeAreaView style={{flex: 1}}>
      <View style={styles.container}>
        {/*Text to show the text according to switch condition*/}
        <Text>{switchValue ? 'Switch is ON' : 'Switch is OFF'}</Text>
        {/*Switch with value set in constructor*/}
        {/*onValueChange will be triggered after switch condition changes*/}
        <Switch
          style={{marginTop: 30}}
          onValueChange={toggleSwitch}
          value={switchValue}
        />
      </View>
      <View style={styles.container}>
        <Button onPress={onPressLearnMore} title="Click Me" color="#841584" />
      </View>

      <View style={styles.container}>
        {loading ? (
          <ActivityIndicator
            //visibility of Overlay Loading Spinner
            visible={loading}
            //Text with the Spinner
            textContent={'Loading...'}
            //Text style of the Spinner Text
            textStyle={styles.spinnerTextStyle}
          />
        ) : (
          <>
            <Text style={{textAlign: 'center', fontSize: 20}}>
              React Native ActivityIndicator
            </Text>
            <Button title="Start Loading" onPress={startLoading}></Button>
          </>
        )}
      </View>

      <View style={styles.container}>
        {/*Picker with multiple chose to choose*/}
        {/*selectedValue to set the preselected value if any*/}
        {/*onValueChange will help to handle the changes*/}
        <Picker
          selectedValue={choosenLabel}
          onValueChange={(itemValue, itemIndex) => {
            setChoosenLabel(itemValue);
            setChoosenIndex(itemIndex);
          }}>
          <Picker.Item label="Hello" value="Hello" />
          <Picker.Item label="React" value="React" />
          <Picker.Item label="Native" value="Native" />
          <Picker.Item label="How" value="How" />
          <Picker.Item label="are" value="are" />
          <Picker.Item label="you" value="you" />
        </Picker>
        {/*Text to show selected picker value*/}
        <Text style={styles.text}>Selected Value: {choosenLabel}</Text>
        {/*Text to show selected index */}
        <Text style={styles.text}>Selected Index: {choosenIndex}</Text>
      </View>
      <ScrollView style={styles.container}>
        <Text style={{fontSize: 30}}>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse
          vel tellus id dui iaculis porta. ... Add More Content .. Lorem ipsum
          dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus id
          dui iaculis porta. ... Add More Content .. Lorem ipsum dolor sit amet,
          consectetur adipiscing elit. Suspendisse vel tellus id dui iaculis
          porta. ... Add More Content .. Lorem ipsum dolor sit amet, consectetur
          adipiscing elit. Suspendisse vel tellus id dui iaculis porta. ... Add
          More Content ..
        </Text>
      </ScrollView>
    </SafeAreaView>
  );
};
const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#ecf0f1',
  },
  container2: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  container3: {
    flex: 1,
    justifyContent: 'center',
    flexDirection: 'column',
  },
  text: {
    fontSize: 20,
    alignSelf: 'center',
  },
  container4: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  container5: {
    flex: 1,
    justifyContent: 'center',
    textAlign: 'center',
    paddingTop: 30,
    backgroundColor: '#ecf0f1',
    padding: 8,
  },
  spinnerTextStyle: {
    color: '#FFFF',
  },
});
export default App;
